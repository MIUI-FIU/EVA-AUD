{"version":3,"file":"static/js/188.37b06c5a.chunk.js","mappings":"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","sources":["../node_modules/whatwg-fetch/fetch.js","../node_modules/ollama/dist/shared/ollama.7987ad93.mjs","../node_modules/ollama/dist/index.mjs"],"sourcesContent":["/* eslint-disable no-prototype-builtins */\nvar g =\n  (typeof globalThis !== 'undefined' && globalThis) ||\n  (typeof self !== 'undefined' && self) ||\n  // eslint-disable-next-line no-undef\n  (typeof global !== 'undefined' && global) ||\n  {}\n\nvar support = {\n  searchParams: 'URLSearchParams' in g,\n  iterable: 'Symbol' in g && 'iterator' in Symbol,\n  blob:\n    'FileReader' in g &&\n    'Blob' in g &&\n    (function() {\n      try {\n        new Blob()\n        return true\n      } catch (e) {\n        return false\n      }\n    })(),\n  formData: 'FormData' in g,\n  arrayBuffer: 'ArrayBuffer' in g\n}\n\nfunction isDataView(obj) {\n  return obj && DataView.prototype.isPrototypeOf(obj)\n}\n\nif (support.arrayBuffer) {\n  var viewClasses = [\n    '[object Int8Array]',\n    '[object Uint8Array]',\n    '[object Uint8ClampedArray]',\n    '[object Int16Array]',\n    '[object Uint16Array]',\n    '[object Int32Array]',\n    '[object Uint32Array]',\n    '[object Float32Array]',\n    '[object Float64Array]'\n  ]\n\n  var isArrayBufferView =\n    ArrayBuffer.isView ||\n    function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n}\n\nfunction normalizeName(name) {\n  if (typeof name !== 'string') {\n    name = String(name)\n  }\n  if (/[^a-z0-9\\-#$%&'*+.^_`|~!]/i.test(name) || name === '') {\n    throw new TypeError('Invalid character in header field name: \"' + name + '\"')\n  }\n  return name.toLowerCase()\n}\n\nfunction normalizeValue(value) {\n  if (typeof value !== 'string') {\n    value = String(value)\n  }\n  return value\n}\n\n// Build a destructive iterator for the value list\nfunction iteratorFor(items) {\n  var iterator = {\n    next: function() {\n      var value = items.shift()\n      return {done: value === undefined, value: value}\n    }\n  }\n\n  if (support.iterable) {\n    iterator[Symbol.iterator] = function() {\n      return iterator\n    }\n  }\n\n  return iterator\n}\n\nexport function Headers(headers) {\n  this.map = {}\n\n  if (headers instanceof Headers) {\n    headers.forEach(function(value, name) {\n      this.append(name, value)\n    }, this)\n  } else if (Array.isArray(headers)) {\n    headers.forEach(function(header) {\n      if (header.length != 2) {\n        throw new TypeError('Headers constructor: expected name/value pair to be length 2, found' + header.length)\n      }\n      this.append(header[0], header[1])\n    }, this)\n  } else if (headers) {\n    Object.getOwnPropertyNames(headers).forEach(function(name) {\n      this.append(name, headers[name])\n    }, this)\n  }\n}\n\nHeaders.prototype.append = function(name, value) {\n  name = normalizeName(name)\n  value = normalizeValue(value)\n  var oldValue = this.map[name]\n  this.map[name] = oldValue ? oldValue + ', ' + value : value\n}\n\nHeaders.prototype['delete'] = function(name) {\n  delete this.map[normalizeName(name)]\n}\n\nHeaders.prototype.get = function(name) {\n  name = normalizeName(name)\n  return this.has(name) ? this.map[name] : null\n}\n\nHeaders.prototype.has = function(name) {\n  return this.map.hasOwnProperty(normalizeName(name))\n}\n\nHeaders.prototype.set = function(name, value) {\n  this.map[normalizeName(name)] = normalizeValue(value)\n}\n\nHeaders.prototype.forEach = function(callback, thisArg) {\n  for (var name in this.map) {\n    if (this.map.hasOwnProperty(name)) {\n      callback.call(thisArg, this.map[name], name, this)\n    }\n  }\n}\n\nHeaders.prototype.keys = function() {\n  var items = []\n  this.forEach(function(value, name) {\n    items.push(name)\n  })\n  return iteratorFor(items)\n}\n\nHeaders.prototype.values = function() {\n  var items = []\n  this.forEach(function(value) {\n    items.push(value)\n  })\n  return iteratorFor(items)\n}\n\nHeaders.prototype.entries = function() {\n  var items = []\n  this.forEach(function(value, name) {\n    items.push([name, value])\n  })\n  return iteratorFor(items)\n}\n\nif (support.iterable) {\n  Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n}\n\nfunction consumed(body) {\n  if (body._noBody) return\n  if (body.bodyUsed) {\n    return Promise.reject(new TypeError('Already read'))\n  }\n  body.bodyUsed = true\n}\n\nfunction fileReaderReady(reader) {\n  return new Promise(function(resolve, reject) {\n    reader.onload = function() {\n      resolve(reader.result)\n    }\n    reader.onerror = function() {\n      reject(reader.error)\n    }\n  })\n}\n\nfunction readBlobAsArrayBuffer(blob) {\n  var reader = new FileReader()\n  var promise = fileReaderReady(reader)\n  reader.readAsArrayBuffer(blob)\n  return promise\n}\n\nfunction readBlobAsText(blob) {\n  var reader = new FileReader()\n  var promise = fileReaderReady(reader)\n  var match = /charset=([A-Za-z0-9_-]+)/.exec(blob.type)\n  var encoding = match ? match[1] : 'utf-8'\n  reader.readAsText(blob, encoding)\n  return promise\n}\n\nfunction readArrayBufferAsText(buf) {\n  var view = new Uint8Array(buf)\n  var chars = new Array(view.length)\n\n  for (var i = 0; i < view.length; i++) {\n    chars[i] = String.fromCharCode(view[i])\n  }\n  return chars.join('')\n}\n\nfunction bufferClone(buf) {\n  if (buf.slice) {\n    return buf.slice(0)\n  } else {\n    var view = new Uint8Array(buf.byteLength)\n    view.set(new Uint8Array(buf))\n    return view.buffer\n  }\n}\n\nfunction Body() {\n  this.bodyUsed = false\n\n  this._initBody = function(body) {\n    /*\n      fetch-mock wraps the Response object in an ES6 Proxy to\n      provide useful test harness features such as flush. However, on\n      ES5 browsers without fetch or Proxy support pollyfills must be used;\n      the proxy-pollyfill is unable to proxy an attribute unless it exists\n      on the object before the Proxy is created. This change ensures\n      Response.bodyUsed exists on the instance, while maintaining the\n      semantic of setting Request.bodyUsed in the constructor before\n      _initBody is called.\n    */\n    // eslint-disable-next-line no-self-assign\n    this.bodyUsed = this.bodyUsed\n    this._bodyInit = body\n    if (!body) {\n      this._noBody = true;\n      this._bodyText = ''\n    } else if (typeof body === 'string') {\n      this._bodyText = body\n    } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n      this._bodyBlob = body\n    } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n      this._bodyFormData = body\n    } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n      this._bodyText = body.toString()\n    } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n      this._bodyArrayBuffer = bufferClone(body.buffer)\n      // IE 10-11 can't handle a DataView body.\n      this._bodyInit = new Blob([this._bodyArrayBuffer])\n    } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n      this._bodyArrayBuffer = bufferClone(body)\n    } else {\n      this._bodyText = body = Object.prototype.toString.call(body)\n    }\n\n    if (!this.headers.get('content-type')) {\n      if (typeof body === 'string') {\n        this.headers.set('content-type', 'text/plain;charset=UTF-8')\n      } else if (this._bodyBlob && this._bodyBlob.type) {\n        this.headers.set('content-type', this._bodyBlob.type)\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n      }\n    }\n  }\n\n  if (support.blob) {\n    this.blob = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return Promise.resolve(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as blob')\n      } else {\n        return Promise.resolve(new Blob([this._bodyText]))\n      }\n    }\n  }\n\n  this.arrayBuffer = function() {\n    if (this._bodyArrayBuffer) {\n      var isConsumed = consumed(this)\n      if (isConsumed) {\n        return isConsumed\n      } else if (ArrayBuffer.isView(this._bodyArrayBuffer)) {\n        return Promise.resolve(\n          this._bodyArrayBuffer.buffer.slice(\n            this._bodyArrayBuffer.byteOffset,\n            this._bodyArrayBuffer.byteOffset + this._bodyArrayBuffer.byteLength\n          )\n        )\n      } else {\n        return Promise.resolve(this._bodyArrayBuffer)\n      }\n    } else if (support.blob) {\n      return this.blob().then(readBlobAsArrayBuffer)\n    } else {\n      throw new Error('could not read as ArrayBuffer')\n    }\n  }\n\n  this.text = function() {\n    var rejected = consumed(this)\n    if (rejected) {\n      return rejected\n    }\n\n    if (this._bodyBlob) {\n      return readBlobAsText(this._bodyBlob)\n    } else if (this._bodyArrayBuffer) {\n      return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n    } else if (this._bodyFormData) {\n      throw new Error('could not read FormData body as text')\n    } else {\n      return Promise.resolve(this._bodyText)\n    }\n  }\n\n  if (support.formData) {\n    this.formData = function() {\n      return this.text().then(decode)\n    }\n  }\n\n  this.json = function() {\n    return this.text().then(JSON.parse)\n  }\n\n  return this\n}\n\n// HTTP methods whose capitalization should be normalized\nvar methods = ['CONNECT', 'DELETE', 'GET', 'HEAD', 'OPTIONS', 'PATCH', 'POST', 'PUT', 'TRACE']\n\nfunction normalizeMethod(method) {\n  var upcased = method.toUpperCase()\n  return methods.indexOf(upcased) > -1 ? upcased : method\n}\n\nexport function Request(input, options) {\n  if (!(this instanceof Request)) {\n    throw new TypeError('Please use the \"new\" operator, this DOM object constructor cannot be called as a function.')\n  }\n\n  options = options || {}\n  var body = options.body\n\n  if (input instanceof Request) {\n    if (input.bodyUsed) {\n      throw new TypeError('Already read')\n    }\n    this.url = input.url\n    this.credentials = input.credentials\n    if (!options.headers) {\n      this.headers = new Headers(input.headers)\n    }\n    this.method = input.method\n    this.mode = input.mode\n    this.signal = input.signal\n    if (!body && input._bodyInit != null) {\n      body = input._bodyInit\n      input.bodyUsed = true\n    }\n  } else {\n    this.url = String(input)\n  }\n\n  this.credentials = options.credentials || this.credentials || 'same-origin'\n  if (options.headers || !this.headers) {\n    this.headers = new Headers(options.headers)\n  }\n  this.method = normalizeMethod(options.method || this.method || 'GET')\n  this.mode = options.mode || this.mode || null\n  this.signal = options.signal || this.signal || (function () {\n    if ('AbortController' in g) {\n      var ctrl = new AbortController();\n      return ctrl.signal;\n    }\n  }());\n  this.referrer = null\n\n  if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n    throw new TypeError('Body not allowed for GET or HEAD requests')\n  }\n  this._initBody(body)\n\n  if (this.method === 'GET' || this.method === 'HEAD') {\n    if (options.cache === 'no-store' || options.cache === 'no-cache') {\n      // Search for a '_' parameter in the query string\n      var reParamSearch = /([?&])_=[^&]*/\n      if (reParamSearch.test(this.url)) {\n        // If it already exists then set the value with the current time\n        this.url = this.url.replace(reParamSearch, '$1_=' + new Date().getTime())\n      } else {\n        // Otherwise add a new '_' parameter to the end with the current time\n        var reQueryString = /\\?/\n        this.url += (reQueryString.test(this.url) ? '&' : '?') + '_=' + new Date().getTime()\n      }\n    }\n  }\n}\n\nRequest.prototype.clone = function() {\n  return new Request(this, {body: this._bodyInit})\n}\n\nfunction decode(body) {\n  var form = new FormData()\n  body\n    .trim()\n    .split('&')\n    .forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n  return form\n}\n\nfunction parseHeaders(rawHeaders) {\n  var headers = new Headers()\n  // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n  // https://tools.ietf.org/html/rfc7230#section-3.2\n  var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ')\n  // Avoiding split via regex to work around a common IE11 bug with the core-js 3.6.0 regex polyfill\n  // https://github.com/github/fetch/issues/748\n  // https://github.com/zloirock/core-js/issues/751\n  preProcessedHeaders\n    .split('\\r')\n    .map(function(header) {\n      return header.indexOf('\\n') === 0 ? header.substr(1, header.length) : header\n    })\n    .forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        try {\n          headers.append(key, value)\n        } catch (error) {\n          console.warn('Response ' + error.message)\n        }\n      }\n    })\n  return headers\n}\n\nBody.call(Request.prototype)\n\nexport function Response(bodyInit, options) {\n  if (!(this instanceof Response)) {\n    throw new TypeError('Please use the \"new\" operator, this DOM object constructor cannot be called as a function.')\n  }\n  if (!options) {\n    options = {}\n  }\n\n  this.type = 'default'\n  this.status = options.status === undefined ? 200 : options.status\n  if (this.status < 200 || this.status > 599) {\n    throw new RangeError(\"Failed to construct 'Response': The status provided (0) is outside the range [200, 599].\")\n  }\n  this.ok = this.status >= 200 && this.status < 300\n  this.statusText = options.statusText === undefined ? '' : '' + options.statusText\n  this.headers = new Headers(options.headers)\n  this.url = options.url || ''\n  this._initBody(bodyInit)\n}\n\nBody.call(Response.prototype)\n\nResponse.prototype.clone = function() {\n  return new Response(this._bodyInit, {\n    status: this.status,\n    statusText: this.statusText,\n    headers: new Headers(this.headers),\n    url: this.url\n  })\n}\n\nResponse.error = function() {\n  var response = new Response(null, {status: 200, statusText: ''})\n  response.ok = false\n  response.status = 0\n  response.type = 'error'\n  return response\n}\n\nvar redirectStatuses = [301, 302, 303, 307, 308]\n\nResponse.redirect = function(url, status) {\n  if (redirectStatuses.indexOf(status) === -1) {\n    throw new RangeError('Invalid status code')\n  }\n\n  return new Response(null, {status: status, headers: {location: url}})\n}\n\nexport var DOMException = g.DOMException\ntry {\n  new DOMException()\n} catch (err) {\n  DOMException = function(message, name) {\n    this.message = message\n    this.name = name\n    var error = Error(message)\n    this.stack = error.stack\n  }\n  DOMException.prototype = Object.create(Error.prototype)\n  DOMException.prototype.constructor = DOMException\n}\n\nexport function fetch(input, init) {\n  return new Promise(function(resolve, reject) {\n    var request = new Request(input, init)\n\n    if (request.signal && request.signal.aborted) {\n      return reject(new DOMException('Aborted', 'AbortError'))\n    }\n\n    var xhr = new XMLHttpRequest()\n\n    function abortXhr() {\n      xhr.abort()\n    }\n\n    xhr.onload = function() {\n      var options = {\n        statusText: xhr.statusText,\n        headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n      }\n      // This check if specifically for when a user fetches a file locally from the file system\n      // Only if the status is out of a normal range\n      if (request.url.indexOf('file://') === 0 && (xhr.status < 200 || xhr.status > 599)) {\n        options.status = 200;\n      } else {\n        options.status = xhr.status;\n      }\n      options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n      var body = 'response' in xhr ? xhr.response : xhr.responseText\n      setTimeout(function() {\n        resolve(new Response(body, options))\n      }, 0)\n    }\n\n    xhr.onerror = function() {\n      setTimeout(function() {\n        reject(new TypeError('Network request failed'))\n      }, 0)\n    }\n\n    xhr.ontimeout = function() {\n      setTimeout(function() {\n        reject(new TypeError('Network request timed out'))\n      }, 0)\n    }\n\n    xhr.onabort = function() {\n      setTimeout(function() {\n        reject(new DOMException('Aborted', 'AbortError'))\n      }, 0)\n    }\n\n    function fixUrl(url) {\n      try {\n        return url === '' && g.location.href ? g.location.href : url\n      } catch (e) {\n        return url\n      }\n    }\n\n    xhr.open(request.method, fixUrl(request.url), true)\n\n    if (request.credentials === 'include') {\n      xhr.withCredentials = true\n    } else if (request.credentials === 'omit') {\n      xhr.withCredentials = false\n    }\n\n    if ('responseType' in xhr) {\n      if (support.blob) {\n        xhr.responseType = 'blob'\n      } else if (\n        support.arrayBuffer\n      ) {\n        xhr.responseType = 'arraybuffer'\n      }\n    }\n\n    if (init && typeof init.headers === 'object' && !(init.headers instanceof Headers || (g.Headers && init.headers instanceof g.Headers))) {\n      var names = [];\n      Object.getOwnPropertyNames(init.headers).forEach(function(name) {\n        names.push(normalizeName(name))\n        xhr.setRequestHeader(name, normalizeValue(init.headers[name]))\n      })\n      request.headers.forEach(function(value, name) {\n        if (names.indexOf(name) === -1) {\n          xhr.setRequestHeader(name, value)\n        }\n      })\n    } else {\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n    }\n\n    if (request.signal) {\n      request.signal.addEventListener('abort', abortXhr)\n\n      xhr.onreadystatechange = function() {\n        // DONE (success or failure)\n        if (xhr.readyState === 4) {\n          request.signal.removeEventListener('abort', abortXhr)\n        }\n      }\n    }\n\n    xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n  })\n}\n\nfetch.polyfill = true\n\nif (!g.fetch) {\n  g.fetch = fetch\n  g.Headers = Headers\n  g.Request = Request\n  g.Response = Response\n}\n","import 'whatwg-fetch';\n\nconst version = \"0.5.6\";\n\nvar __defProp$1 = Object.defineProperty;\nvar __defNormalProp$1 = (obj, key, value) => key in obj ? __defProp$1(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField$1 = (obj, key, value) => {\n  __defNormalProp$1(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nclass ResponseError extends Error {\n  constructor(error, status_code) {\n    super(error);\n    this.error = error;\n    this.status_code = status_code;\n    this.name = \"ResponseError\";\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ResponseError);\n    }\n  }\n}\nclass AbortableAsyncIterator {\n  constructor(abortController, itr, doneCallback) {\n    __publicField$1(this, \"abortController\");\n    __publicField$1(this, \"itr\");\n    __publicField$1(this, \"doneCallback\");\n    this.abortController = abortController;\n    this.itr = itr;\n    this.doneCallback = doneCallback;\n  }\n  abort() {\n    this.abortController.abort();\n  }\n  async *[Symbol.asyncIterator]() {\n    for await (const message of this.itr) {\n      if (\"error\" in message) {\n        throw new Error(message.error);\n      }\n      yield message;\n      if (message.done || message.status === \"success\") {\n        this.doneCallback();\n        return;\n      }\n    }\n    throw new Error(\"Did not receive done or success response in stream.\");\n  }\n}\nconst checkOk = async (response) => {\n  if (response.ok) {\n    return;\n  }\n  let message = `Error ${response.status}: ${response.statusText}`;\n  let errorData = null;\n  if (response.headers.get(\"content-type\")?.includes(\"application/json\")) {\n    try {\n      errorData = await response.json();\n      message = errorData.error || message;\n    } catch (error) {\n      console.log(\"Failed to parse error response as JSON\");\n    }\n  } else {\n    try {\n      console.log(\"Getting text from response\");\n      const textResponse = await response.text();\n      message = textResponse || message;\n    } catch (error) {\n      console.log(\"Failed to get text from error response\");\n    }\n  }\n  throw new ResponseError(message, response.status);\n};\nfunction getPlatform() {\n  if (typeof window !== \"undefined\" && window.navigator) {\n    return `${window.navigator.platform.toLowerCase()} Browser/${navigator.userAgent};`;\n  } else if (typeof process !== \"undefined\") {\n    return `${process.arch} ${process.platform} Node.js/${process.version}`;\n  }\n  return \"\";\n}\nconst fetchWithHeaders = async (fetch, url, options = {}) => {\n  const defaultHeaders = {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\",\n    \"User-Agent\": `ollama-js/${version} (${getPlatform()})`\n  };\n  if (!options.headers) {\n    options.headers = {};\n  }\n  options.headers = {\n    ...defaultHeaders,\n    ...options.headers\n  };\n  return fetch(url, options);\n};\nconst get = async (fetch, host) => {\n  const response = await fetchWithHeaders(fetch, host);\n  await checkOk(response);\n  return response;\n};\nconst head = async (fetch, host) => {\n  const response = await fetchWithHeaders(fetch, host, {\n    method: \"HEAD\"\n  });\n  await checkOk(response);\n  return response;\n};\nconst post = async (fetch, host, data, options) => {\n  const isRecord = (input) => {\n    return input !== null && typeof input === \"object\" && !Array.isArray(input);\n  };\n  const formattedData = isRecord(data) ? JSON.stringify(data) : data;\n  const response = await fetchWithHeaders(fetch, host, {\n    method: \"POST\",\n    body: formattedData,\n    signal: options?.signal\n  });\n  await checkOk(response);\n  return response;\n};\nconst del = async (fetch, host, data) => {\n  const response = await fetchWithHeaders(fetch, host, {\n    method: \"DELETE\",\n    body: JSON.stringify(data)\n  });\n  await checkOk(response);\n  return response;\n};\nconst parseJSON = async function* (itr) {\n  const decoder = new TextDecoder(\"utf-8\");\n  let buffer = \"\";\n  const reader = itr.getReader();\n  while (true) {\n    const { done, value: chunk } = await reader.read();\n    if (done) {\n      break;\n    }\n    buffer += decoder.decode(chunk);\n    const parts = buffer.split(\"\\n\");\n    buffer = parts.pop() ?? \"\";\n    for (const part of parts) {\n      try {\n        yield JSON.parse(part);\n      } catch (error) {\n        console.warn(\"invalid json: \", part);\n      }\n    }\n  }\n  for (const part of buffer.split(\"\\n\").filter((p) => p !== \"\")) {\n    try {\n      yield JSON.parse(part);\n    } catch (error) {\n      console.warn(\"invalid json: \", part);\n    }\n  }\n};\nconst formatHost = (host) => {\n  if (!host) {\n    return \"http://127.0.0.1:11434\";\n  }\n  let isExplicitProtocol = host.includes(\"://\");\n  if (host.startsWith(\":\")) {\n    host = `http://127.0.0.1${host}`;\n    isExplicitProtocol = false;\n  }\n  if (!isExplicitProtocol) {\n    host = `http://${host}`;\n  }\n  const url = new URL(host);\n  let port = url.port;\n  if (!port) {\n    if (!isExplicitProtocol) {\n      port = \"11434\";\n    } else {\n      port = url.protocol === \"https:\" ? \"443\" : \"80\";\n    }\n  }\n  let formattedHost = `${url.protocol}//${url.hostname}:${port}${url.pathname}`;\n  if (formattedHost.endsWith(\"/\")) {\n    formattedHost = formattedHost.slice(0, -1);\n  }\n  return formattedHost;\n};\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nlet Ollama$1 = class Ollama {\n  constructor(config) {\n    __publicField(this, \"config\");\n    __publicField(this, \"fetch\");\n    __publicField(this, \"ongoingStreamedRequests\", []);\n    this.config = {\n      host: \"\"\n    };\n    if (!config?.proxy) {\n      this.config.host = formatHost(config?.host ?? \"http://127.0.0.1:11434\");\n    }\n    this.fetch = fetch;\n    if (config?.fetch != null) {\n      this.fetch = config.fetch;\n    }\n  }\n  // Abort any ongoing streamed requests to Ollama\n  abort() {\n    for (const request of this.ongoingStreamedRequests) {\n      request.abort();\n    }\n    this.ongoingStreamedRequests.length = 0;\n  }\n  /**\n   * Processes a request to the Ollama server. If the request is streamable, it will return a\n   * AbortableAsyncIterator that yields the response messages. Otherwise, it will return the response\n   * object.\n   * @param endpoint {string} - The endpoint to send the request to.\n   * @param request {object} - The request object to send to the endpoint.\n   * @protected {T | AbortableAsyncIterator<T>} - The response object or a AbortableAsyncIterator that yields\n   * response messages.\n   * @throws {Error} - If the response body is missing or if the response is an error.\n   * @returns {Promise<T | AbortableAsyncIterator<T>>} - The response object or a AbortableAsyncIterator that yields the streamed response.\n   */\n  async processStreamableRequest(endpoint, request) {\n    request.stream = request.stream ?? false;\n    const host = `${this.config.host}/api/${endpoint}`;\n    if (request.stream) {\n      const abortController = new AbortController();\n      const response2 = await post(this.fetch, host, request, {\n        signal: abortController.signal\n      });\n      if (!response2.body) {\n        throw new Error(\"Missing body\");\n      }\n      const itr = parseJSON(response2.body);\n      const abortableAsyncIterator = new AbortableAsyncIterator(\n        abortController,\n        itr,\n        () => {\n          const i = this.ongoingStreamedRequests.indexOf(abortableAsyncIterator);\n          if (i > -1) {\n            this.ongoingStreamedRequests.splice(i, 1);\n          }\n        }\n      );\n      this.ongoingStreamedRequests.push(abortableAsyncIterator);\n      return abortableAsyncIterator;\n    }\n    const response = await post(this.fetch, host, request);\n    return await response.json();\n  }\n  /**\n  * Encodes an image to base64 if it is a Uint8Array.\n  * @param image {Uint8Array | string} - The image to encode.\n  * @returns {Promise<string>} - The base64 encoded image.\n  */\n  async encodeImage(image) {\n    if (typeof image !== \"string\") {\n      const uint8Array = new Uint8Array(image);\n      let byteString = \"\";\n      const len = uint8Array.byteLength;\n      for (let i = 0; i < len; i++) {\n        byteString += String.fromCharCode(uint8Array[i]);\n      }\n      return btoa(byteString);\n    }\n    return image;\n  }\n  /**\n   * Generates a response from a text prompt.\n   * @param request {GenerateRequest} - The request object.\n   * @returns {Promise<GenerateResponse | AbortableAsyncIterator<GenerateResponse>>} - The response object or\n   * an AbortableAsyncIterator that yields response messages.\n   */\n  async generate(request) {\n    if (request.images) {\n      request.images = await Promise.all(request.images.map(this.encodeImage.bind(this)));\n    }\n    return this.processStreamableRequest(\"generate\", request);\n  }\n  /**\n   * Chats with the model. The request object can contain messages with images that are either\n   * Uint8Arrays or base64 encoded strings. The images will be base64 encoded before sending the\n   * request.\n   * @param request {ChatRequest} - The request object.\n   * @returns {Promise<ChatResponse | AbortableAsyncIterator<ChatResponse>>} - The response object or an\n   * AbortableAsyncIterator that yields response messages.\n   */\n  async chat(request) {\n    if (request.messages) {\n      for (const message of request.messages) {\n        if (message.images) {\n          message.images = await Promise.all(\n            message.images.map(this.encodeImage.bind(this))\n          );\n        }\n      }\n    }\n    return this.processStreamableRequest(\"chat\", request);\n  }\n  /**\n   * Creates a new model from a stream of data.\n   * @param request {CreateRequest} - The request object.\n   * @returns {Promise<ProgressResponse | AbortableAsyncIterator<ProgressResponse>>} - The response object or a stream of progress responses.\n   */\n  async create(request) {\n    return this.processStreamableRequest(\"create\", {\n      name: request.model,\n      stream: request.stream,\n      modelfile: request.modelfile,\n      quantize: request.quantize\n    });\n  }\n  /**\n   * Pulls a model from the Ollama registry. The request object can contain a stream flag to indicate if the\n   * response should be streamed.\n   * @param request {PullRequest} - The request object.\n   * @returns {Promise<ProgressResponse | AbortableAsyncIterator<ProgressResponse>>} - The response object or\n   * an AbortableAsyncIterator that yields response messages.\n   */\n  async pull(request) {\n    return this.processStreamableRequest(\"pull\", {\n      name: request.model,\n      stream: request.stream,\n      insecure: request.insecure\n    });\n  }\n  /**\n   * Pushes a model to the Ollama registry. The request object can contain a stream flag to indicate if the\n   * response should be streamed.\n   * @param request {PushRequest} - The request object.\n   * @returns {Promise<ProgressResponse | AbortableAsyncIterator<ProgressResponse>>} - The response object or\n   * an AbortableAsyncIterator that yields response messages.\n   */\n  async push(request) {\n    return this.processStreamableRequest(\"push\", {\n      name: request.model,\n      stream: request.stream,\n      insecure: request.insecure\n    });\n  }\n  /**\n   * Deletes a model from the server. The request object should contain the name of the model to\n   * delete.\n   * @param request {DeleteRequest} - The request object.\n   * @returns {Promise<StatusResponse>} - The response object.\n   */\n  async delete(request) {\n    await del(this.fetch, `${this.config.host}/api/delete`, {\n      name: request.model\n    });\n    return { status: \"success\" };\n  }\n  /**\n   * Copies a model from one name to another. The request object should contain the name of the\n   * model to copy and the new name.\n   * @param request {CopyRequest} - The request object.\n   * @returns {Promise<StatusResponse>} - The response object.\n   */\n  async copy(request) {\n    await post(this.fetch, `${this.config.host}/api/copy`, { ...request });\n    return { status: \"success\" };\n  }\n  /**\n   * Lists the models on the server.\n   * @returns {Promise<ListResponse>} - The response object.\n   * @throws {Error} - If the response body is missing.\n   */\n  async list() {\n    const response = await get(this.fetch, `${this.config.host}/api/tags`);\n    return await response.json();\n  }\n  /**\n   * Shows the metadata of a model. The request object should contain the name of the model.\n   * @param request {ShowRequest} - The request object.\n   * @returns {Promise<ShowResponse>} - The response object.\n   */\n  async show(request) {\n    const response = await post(this.fetch, `${this.config.host}/api/show`, {\n      ...request\n    });\n    return await response.json();\n  }\n  /**\n   * Embeds text input into vectors.\n   * @param request {EmbedRequest} - The request object.\n   * @returns {Promise<EmbedResponse>} - The response object.\n   */\n  async embed(request) {\n    const response = await post(this.fetch, `${this.config.host}/api/embed`, {\n      ...request\n    });\n    return await response.json();\n  }\n  /**\n   * Embeds a text prompt into a vector.\n   * @param request {EmbeddingsRequest} - The request object.\n   * @returns {Promise<EmbeddingsResponse>} - The response object.\n   */\n  async embeddings(request) {\n    const response = await post(this.fetch, `${this.config.host}/api/embeddings`, {\n      ...request\n    });\n    return await response.json();\n  }\n  /**\n   * Lists the running models on the server\n   * @returns {Promise<ListResponse>} - The response object.\n   * @throws {Error} - If the response body is missing.\n   */\n  async ps() {\n    const response = await get(this.fetch, `${this.config.host}/api/ps`);\n    return await response.json();\n  }\n};\nconst browser = new Ollama$1();\n\nexport { Ollama$1 as O, browser as b, head as h, post as p };\n","import { O as Ollama$1, h as head, p as post } from './shared/ollama.7987ad93.mjs';\nimport fs, { promises, createReadStream } from 'fs';\nimport { resolve, join, dirname } from 'path';\nimport { createHash } from 'crypto';\nimport { homedir } from 'os';\nimport 'whatwg-fetch';\n\nclass Ollama extends Ollama$1 {\n  async encodeImage(image) {\n    if (typeof image !== \"string\") {\n      return Buffer.from(image).toString(\"base64\");\n    }\n    try {\n      if (fs.existsSync(image)) {\n        const fileBuffer = await promises.readFile(resolve(image));\n        return Buffer.from(fileBuffer).toString(\"base64\");\n      }\n    } catch {\n    }\n    return image;\n  }\n  /**\n   * Parse the modelfile and replace the FROM and ADAPTER commands with the corresponding blob hashes.\n   * @param modelfile {string} - The modelfile content\n   * @param mfDir {string} - The directory of the modelfile\n   * @private @internal\n   */\n  async parseModelfile(modelfile, mfDir = process.cwd()) {\n    const out = [];\n    const lines = modelfile.split(\"\\n\");\n    for (const line of lines) {\n      const [command, args] = line.split(\" \", 2);\n      if ([\"FROM\", \"ADAPTER\"].includes(command.toUpperCase())) {\n        const path = this.resolvePath(args.trim(), mfDir);\n        if (await this.fileExists(path)) {\n          out.push(`${command} @${await this.createBlob(path)}`);\n        } else {\n          out.push(`${command} ${args}`);\n        }\n      } else {\n        out.push(line);\n      }\n    }\n    return out.join(\"\\n\");\n  }\n  /**\n   * Resolve the path to an absolute path.\n   * @param inputPath {string} - The input path\n   * @param mfDir {string} - The directory of the modelfile\n   * @private @internal\n   */\n  resolvePath(inputPath, mfDir) {\n    if (inputPath.startsWith(\"~\")) {\n      return join(homedir(), inputPath.slice(1));\n    }\n    return resolve(mfDir, inputPath);\n  }\n  /**\n   * checks if a file exists\n   * @param path {string} - The path to the file\n   * @private @internal\n   * @returns {Promise<boolean>} - Whether the file exists or not\n   */\n  async fileExists(path) {\n    try {\n      await promises.access(path);\n      return true;\n    } catch {\n      return false;\n    }\n  }\n  async createBlob(path) {\n    if (typeof ReadableStream === \"undefined\") {\n      throw new Error(\"Streaming uploads are not supported in this environment.\");\n    }\n    const fileStream = createReadStream(path);\n    const sha256sum = await new Promise((resolve2, reject) => {\n      const hash = createHash(\"sha256\");\n      fileStream.on(\"data\", (data) => hash.update(data));\n      fileStream.on(\"end\", () => resolve2(hash.digest(\"hex\")));\n      fileStream.on(\"error\", reject);\n    });\n    const digest = `sha256:${sha256sum}`;\n    try {\n      await head(this.fetch, `${this.config.host}/api/blobs/${digest}`);\n    } catch (e) {\n      if (e instanceof Error && e.message.includes(\"404\")) {\n        const readableStream = new ReadableStream({\n          start(controller) {\n            fileStream.on(\"data\", (chunk) => {\n              controller.enqueue(chunk);\n            });\n            fileStream.on(\"end\", () => {\n              controller.close();\n            });\n            fileStream.on(\"error\", (err) => {\n              controller.error(err);\n            });\n          }\n        });\n        await post(\n          this.fetch,\n          `${this.config.host}/api/blobs/${digest}`,\n          readableStream\n        );\n      } else {\n        throw e;\n      }\n    }\n    return digest;\n  }\n  async create(request) {\n    let modelfileContent = \"\";\n    if (request.path) {\n      modelfileContent = await promises.readFile(request.path, { encoding: \"utf8\" });\n      modelfileContent = await this.parseModelfile(\n        modelfileContent,\n        dirname(request.path)\n      );\n    } else if (request.modelfile) {\n      modelfileContent = await this.parseModelfile(request.modelfile);\n    } else {\n      throw new Error(\"Must provide either path or modelfile to create a model\");\n    }\n    request.modelfile = modelfileContent;\n    if (request.stream) {\n      return super.create(request);\n    } else {\n      return super.create(request);\n    }\n  }\n}\nconst index = new Ollama();\n\nexport { Ollama, index as default };\n"],"names":["g","globalThis","self","global","support","Symbol","Blob","e","viewClasses","isArrayBufferView","ArrayBuffer","isView","obj","indexOf","Object","prototype","toString","call","normalizeName","name","String","test","TypeError","toLowerCase","normalizeValue","value","iteratorFor","items","iterator","next","shift","done","undefined","Headers","headers","this","map","forEach","append","Array","isArray","header","length","getOwnPropertyNames","consumed","body","_noBody","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","result","onerror","error","readBlobAsArrayBuffer","blob","FileReader","promise","readAsArrayBuffer","bufferClone","buf","slice","view","Uint8Array","byteLength","set","buffer","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","get","type","rejected","Error","arrayBuffer","isConsumed","byteOffset","then","text","match","exec","encoding","readAsText","readBlobAsText","chars","i","fromCharCode","join","readArrayBufferAsText","formData","decode","json","JSON","parse","oldValue","has","hasOwnProperty","callback","thisArg","keys","push","values","entries","methods","Request","input","options","url","credentials","method","mode","signal","upcased","toUpperCase","normalizeMethod","AbortController","referrer","cache","reParamSearch","replace","Date","getTime","form","trim","split","bytes","decodeURIComponent","parseHeaders","rawHeaders","substr","line","parts","key","console","warn","message","Response","bodyInit","status","RangeError","ok","statusText","clone","response","redirectStatuses","redirect","location","DOMException","err","stack","create","constructor","fetch","init","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","getAllResponseHeaders","responseURL","responseText","setTimeout","ontimeout","onabort","open","href","fixUrl","withCredentials","responseType","names","setRequestHeader","addEventListener","onreadystatechange","readyState","removeEventListener","send","polyfill","__defProp$1","defineProperty","__publicField$1","__defNormalProp$1","enumerable","configurable","writable","ResponseError","status_code","super","captureStackTrace","AbortableAsyncIterator","abortController","itr","doneCallback","asyncIterator","checkOk","async","_response$headers$get","concat","errorData","includes","log","fetchWithHeaders","arguments","defaultHeaders","Accept","window","navigator","platform","userAgent","process","arch","version","host","post","data","formattedData","stringify","__defProp","__publicField","__defNormalProp","Ollama$1","config","_config$host","proxy","isExplicitProtocol","startsWith","URL","port","protocol","formattedHost","hostname","pathname","endsWith","formatHost","ongoingStreamedRequests","processStreamableRequest","endpoint","_request$stream","stream","response2","decoder","TextDecoder","getReader","_parts$pop","chunk","read","pop","part","filter","p","parseJSON","abortableAsyncIterator","splice","encodeImage","image","uint8Array","byteString","len","btoa","generate","images","all","bind","chat","messages","model","modelfile","quantize","pull","insecure","delete","del","copy","list","show","embed","embeddings","ps","index","Buffer","from","fs","fileBuffer","promises","readFile","parseModelfile","mfDir","cwd","out","lines","command","args","path","resolvePath","fileExists","createBlob","inputPath","homedir","access","ReadableStream","fileStream","createReadStream","sha256sum","resolve2","hash","createHash","on","update","digest","head","readableStream","start","controller","enqueue","close","modelfileContent","dirname"],"sourceRoot":""}